<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>ups-service</artifactId>
    <packaging>war</packaging>
    <name>Tradeshift UPS Service</name>
    <version>1.0.0-master-SNAPSHOT</version>
    <parent>
        <groupId>com.tradeshift</groupId>
        <artifactId>tradeshift-parent</artifactId>
        <version>69.0</version>
    </parent>

    <properties>
        <source.version>1.8</source.version>
        <target.version>1.8</target.version>
        <java.version>1.8</java.version>
        <jackson.version>1.9.7</jackson.version>
        <common.version>345.0.1</common.version>
        <common.lang.version>3.5</common.lang.version>
        <ubl.version>83.7.2</ubl.version>
        <target.dir>target</target.dir>
        <docker.registry>registry.bwtsi.cn</docker.registry>
        <docker.imageName>${docker.registry}/${project.artifactId}:${git.commit.id}</docker.imageName>
        <jetty.version>9.3.7.v20160115</jetty.version>
        <elasticsearch.version>1.7.5</elasticsearch.version>
        <xstream.version>1.3</xstream.version>
        <xalan.version>2.7.1</xalan.version>
        <xmlapis.version>1.3.04</xmlapis.version>
        <springockito.version>1.0.8</springockito.version>
        <analyzer.version>4.10.4</analyzer.version>
        <slf4j.version>1.6.0</slf4j.version>
    </properties>


    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <jettyReload>manual</jettyReload>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <version>${jetty.version}</version>
                        <configuration>
                            <httpConnector>
                                <port>8890</port>
                            </httpConnector>
                            <scanIntervalSeconds>0</scanIntervalSeconds>
                            <stopKey>foo</stopKey>
                            <stopPort>9977</stopPort>
                            <webAppConfig>
                                <contextPath>/tradeshift-ups</contextPath>
                                <jettyEnvXml>${jettyEnvXml}</jettyEnvXml>
                            </webAppConfig>
                            <overrideWebXml>${overrideWebXml}</overrideWebXml>
                            <reload>automatic</reload>
                            <systemProperties>
                                <systemProperty>
                                    <name>java.awt.headless</name>
                                    <value>true</value>
                                </systemProperty>
                                <systemProperty>
                                    <name>javax.net.ssl.trustStore</name>
                                    <value>${javax.net.ssl.store}</value>
                                </systemProperty>
                                <systemProperty>
                                    <name>javax.net.ssl.trustStorePassword</name>
                                    <value>changeit</value>
                                </systemProperty>
                                <systemProperty>
                                    <name>javax.net.ssl.keyStore</name>
                                    <value>${javax.net.ssl.store}</value>
                                </systemProperty>
                                <systemProperty>
                                    <name>javax.net.ssl.keyStorePassword</name>
                                    <value>changeit</value>
                                </systemProperty>
                                <systemProperty>
                                    <name>javax.net.debug</name>
                                    <value>false</value>
                                </systemProperty>
                            </systemProperties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>eclipse-folders</id>
            <properties>
                <target.dir>target-eclipse</target.dir>
            </properties>
        </profile>
        <profile>
            <id>postgresql-docker</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <maven.build.timestamp.format>yyyyMMddHHmmssSSS</maven.build.timestamp.format>
                <db.database>porta</db.database>
                <db.server>${docker.container.pgdb.ip}</db.server>
                <db.user>porta</db.user>
                <db.pass>porta</db.pass>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.15.11</version>
                        <inherited>false</inherited>
                        <configuration>
                            <images>
                                <image>
                                    <name>tradeshift-docker-postgres95:0b91e51</name>
                                    <alias>pgdb</alias>
                                    <registry>registry.tradeshift.com</registry>
                                    <run>
                                        <env>
                                            <POSTGRES_USER>porta</POSTGRES_USER>
                                            <POSTGRES_PASSWORD>porta</POSTGRES_PASSWORD>
                                        </env>
                                        <ports>
                                            <port>5432:5432</port>
                                        </ports>
                                        <wait>
                                            <tcp>
                                                <ports>
                                                    <port>5432</port>
                                                </ports>
                                            </tcp>
                                            <time>10000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>random-test-schema</id>
            <properties>
                <maven.build.timestamp.format>yyyyMMddHHmmssSSS</maven.build.timestamp.format>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <id>test-schema-name</id>
                                <phase>initialize</phase>
                                <configuration>
                                    <target>
                                        <property name="db.database" value="porta"/>
                                        <property name="db.url" value="jdbc:postgresql://localhost/${db.database}"/>
                                        <property name="db.user" value="porta"/>
                                        <property name="db.pass" value="porta"/>
                                        <echo message="Using test database schema: ${db.database}"/>
                                        <echo append="false" file="${basedir}/target/auto-test-config.properties"
                                              message="#This file contains auto generated content:${line.separator}db.url=${db.url}${line.separator}db.user=${db.user}${line.separator}db.pass=${db.pass}"></echo>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>remove-config</id>
                                <phase>test</phase>
                                <configuration>
                                    <target>
                                        <echo append="false" file="${basedir}/target/auto-test-config.properties"
                                              message="#This file contains auto generated content:${line.separator}"></echo>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>readconfig</id>
                                <phase>initialize</phase>
                                <configuration>
                                    <quiet>true</quiet>
                                    <files>
                                        <file>${basedir}/src/main/resources/config.properties</file>
                                        <file>${basedir}/src/test/resources/test-config.properties</file>
                                        <file>${configurationLocation}</file>
                                        <file>${deploymentDir}/test-config.properties</file>
                                        <file>${basedir}/target/auto-test-config.properties</file>
                                    </files>
                                </configuration>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.carbonfive.db-support</groupId>
                        <artifactId>db-migration-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>reset-before-test</id>
                                <phase>process-test-classes</phase>
                                <!-- just before test -->
                                <goals>
                                    <goal>reset</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>drop-after-test</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>drop</goal>
                                </goals>
                                <!-- just after test -->
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>cn-nexus</id>
            <properties>
                <altReleaseDeploymentRepository>releases::default::http://t.nexus.bwtsi.cn:9999/nexus/content/repositories/releases/</altReleaseDeploymentRepository>
                <altSnapshotDeploymentRepository>snapshots::default::http://t.nexus.bwtsi.cn:9999/nexus/content/repositories/snapshots/</altSnapshotDeploymentRepository>
            </properties>
        </profile>
    </profiles>

    <build>
        <outputDirectory>${basedir}/${target.dir}/classes</outputDirectory>
        <testOutputDirectory>${basedir}/${target.dir}/test-classes</testOutputDirectory>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.groovy</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.1.10</version>
                <executions>
                    <execution>
                        <id>revision</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skipPoms>false</skipPoms>
                    <gitDescribe>
                        <skip>true</skip>
                    </gitDescribe>
                </configuration>
                <inherited>false</inherited>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- NOTE: We cannot simply use <resources> because we need to keep the modified timestamp in order to avoid docker cache misses -->
                        <id>copy docker folder</id>
                        <phase>package</phase>
                        <configuration>
                            <tasks>
                                <copy todir="${project.build.directory}/docker">
                                    <fileset dir="docker"/>
                                </copy>
                                <touch datetime="09/10/1974 4:30 pm"> <!-- set modified timestamp for all files in docker to ensure caching of unmodified files -->
                                    <fileset dir="${project.build.directory}/docker"/>
                                </touch>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>copy war file</id>
                        <phase>package</phase>
                        <configuration>
                            <tasks>
                                <copy file="${project.build.directory}/${project.build.finalName}.war"
                                      todir="${project.build.directory}/docker"/>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>it.corley</groupId>
                        <artifactId>aws-ant-tasks</artifactId>
                        <version>0.5</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>com.atlassian.maven.plugins</groupId>
                <artifactId>bash-maven-plugin</artifactId>
                <version>1.0-ts-20141204</version>
                <executions>
                    <execution>
                        <id>package</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <script>
                                rsync -a --delete docker/ ${project.build.directory}/docker/
                                cp -p ${project.build.directory}/${project.build.finalName}.war ${project.build.directory}/docker
                                find ${project.build.directory}/docker | xargs touch -t 197409101630.00
                                cd ${project.build.directory}/docker
                                docker build -t ${docker.imageName} ${project.build.directory}/docker
                            </script>
                        </configuration>
                    </execution>
                    <execution>
                        <id>deploy</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>deploy</phase>
                        <configuration>
                            <script>
                                docker push ${docker.imageName}
                            </script>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <workspace>${eclipse.workspace}</workspace>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.16</version>
                <configuration>
                    <excludes>
                        <exclude>place_holder_to_override_default_of_excluding_inner_classes</exclude>
                    </excludes>
                    <systemPropertyVariables>
                        <config.location>file:${configurationLocation}</config.location>
                        <log4j.configuration>${log4j.configuration}</log4j.configuration>
                    </systemPropertyVariables>
                    <testFailureIgnore>false</testFailureIgnore>
                    <argLine>-Xmx1024m -XX:MaxPermSize=512m</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.8.1</version>
            </plugin>

            <plugin>
                <groupId>com.carbonfive.db-support</groupId>
                <artifactId>db-migration-maven-plugin</artifactId>
                <configuration>
                    <url>${db.url}</url>
                    <username>${db.user}</username>
                    <password>${db.pass}</password>
                    <databaseType>POSTGRESQL</databaseType>
                    <driver>org.postgresql.Driver</driver>
                    <migrationsPath>src/main/resources/db/migrations</migrationsPath>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${postgresql.jdbc.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy</artifactId>
                        <version>1.7.2</version>
                    </dependency>
                    <dependency>
                        <groupId>joda-time</groupId>
                        <artifactId>joda-time</artifactId>
                        <version>1.6</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.17</version>
                <executions>
                    <execution>
                        <id>checkstyle-check</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>true</failsOnError>
                    <!-- This is classpath reference on purpose -->
                    <configLocation>src/main/resources/com/tradeshift/build/checkstyle.xml</configLocation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>com.tradeshift</groupId>
            <artifactId>tradeshift-common-legacy</artifactId>
            <version>${common.version}</version>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.tradeshift</groupId>
                    <artifactId>tradeshift-common-event</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-jdbc</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.tradeshift</groupId>
            <artifactId>tradeshift-common-config</artifactId>
            <version>${common.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.tradeshift</groupId>
            <artifactId>tradeshift-common-dto</artifactId>
            <version>${common.version}</version>
        </dependency>
        <dependency>
            <groupId>com.tradeshift</groupId>
            <artifactId>tradeshift-common-dto-base</artifactId>
            <version>${common.version}</version>
        </dependency>
        <dependency>
            <groupId>com.tradeshift</groupId>
            <artifactId>tradeshift-common-rest</artifactId>
            <version>${common.version}</version>
        </dependency>
        <dependency>
            <groupId>com.tradeshift</groupId>
            <artifactId>tradeshift-common-jersey-1</artifactId>
            <scope>runtime</scope>
            <version>${common.version}</version>
        </dependency>
        <dependency>
            <groupId>com.tradeshift</groupId>
            <artifactId>tradeshift-common-sql</artifactId>
            <version>${common.version}</version>
        </dependency>
        <dependency>
            <groupId>com.tradeshift</groupId>
            <artifactId>tradeshift-common-net</artifactId>
            <scope>runtime</scope>
            <version>${common.version}</version>
        </dependency>
        <dependency>
            <groupId>com.tradeshift</groupId>
            <artifactId>tradeshift-common-logging</artifactId>
            <scope>runtime</scope>
            <version>${common.version}</version>
        </dependency>
        <dependency>
            <groupId>com.tradeshift</groupId>
            <artifactId>tradeshift-common-auditlog</artifactId>
            <version>${common.version}</version>
        </dependency>
        <dependency>
            <groupId>com.tradeshift</groupId>
            <artifactId>tradeshift-ubl</artifactId>
            <version>${ubl.version}</version>
        </dependency>
        <dependency>
            <!-- provides the status resource -->
            <groupId>com.tradeshift</groupId>
            <artifactId>tradeshift-common-status</artifactId>
            <version>${common.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.tradeshift</groupId>
            <artifactId>tradeshift-common-status-api</artifactId>
            <scope>runtime</scope>
            <version>${common.version}</version>
        </dependency>
        <dependency>
            <groupId>com.tradeshift</groupId>
            <artifactId>tradeshift-common-exception</artifactId>
            <version>${common.version}</version>
        </dependency>
        <dependency>
            <groupId>com.tradeshift</groupId>
            <artifactId>tradeshift-common-documentation-api</artifactId>
            <version>${common.version}</version>
        </dependency>
        <dependency>
            <groupId>com.tradeshift</groupId>
            <artifactId>tradeshift-common-id</artifactId>
            <version>${common.version}</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <version>${jetty.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!--DB & Storage-->
        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
            <version>${elasticsearch.version}</version>
        </dependency>

        <!--JSON & XML-->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-jaxrs</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>xerces</groupId>
            <artifactId>xercesImpl</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>${xstream.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>xalan</groupId>
            <artifactId>xalan</artifactId>
            <version>${xalan.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
            <version>${xmlapis.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.tradeshift</groupId>
            <artifactId>tradeshift-common-xml</artifactId>
            <version>${common.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.0.1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${common.lang.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.tradeshift</groupId>
            <artifactId>TS-IKAnalyzer</artifactId>
            <version>${analyzer.version}</version>
        </dependency>
        <!--Logging-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <!-- This is used to send errors to sentry. The relevant log4j configuration is setup in log4j files handled by puppet -->
            <groupId>net.kencochrane.raven</groupId>
            <artifactId>raven-log4j</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!--JMX-->
        <dependency>
            <groupId>org.jolokia</groupId>
            <artifactId>jolokia-core</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!--Test-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.kubek2k</groupId>
            <artifactId>springockito-annotations</artifactId>
            <version>${springockito.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.mockito</groupId>
                    <artifactId>mockito-all</artifactId>
                    <!-- use mockito-core instead to avoid having different versions of mockito core classes -->
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!--provided tradeshift-common-legacy-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>


        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
            <version>1.7.0</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-multipart</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.16</version>
            <exclusions>
                <exclusion>
                    <groupId>stax</groupId>
                    <artifactId>stax-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
            <version>1.19</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-jexl</artifactId>
            <version>2.1.1</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>OpenPorta Internal Releases</name>
            <url>http://t.nexus.bwtsi.cn:9999/nexus/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>OpenPorta Internal Snapshots</name>
            <url>http://t.nexus.bwtsi.cn:9999/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>
</project>
